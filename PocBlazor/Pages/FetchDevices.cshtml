@page "/fetchdevices"
@inject Blazored.Storage.ILocalStorage localStorage
@inject HttpClient Http

<h1>List of your devices</h1>

<p>This component demonstrates how to fetch data from C4M server.</p>

@if (string.IsNullOrEmpty(auth.ConsumerKey))
{
    <p><em>No credentials found. Please enter your credentiails in the left menu.</em></p>
}
else
{
    @if (devices.Any())
    {
        <TemplatedTable Items="@devices">
            <TableHeader>
                <th>ID</th>
                <th>Alias</th>
                <th>IMEI</th>
            </TableHeader>
            <RowTemplate Context="dev">
                <td>@dev.Id</td>
                <td>@dev.Alias</td>
                <td>@dev.HardwareId</td>
            </RowTemplate>
        </TemplatedTable>
    }
    else
    {
        <p><em>Loading...</em></p>
    }
}


@functions {
    ConsumerCredentials auth = new ConsumerCredentials();
    List<Device> devices = new List<Device>();

    protected override async Task OnInitAsync()
    {
        auth = await localStorage.GetItem<ConsumerCredentials>("auth") ?? new ConsumerCredentials();
        
        if (string.IsNullOrEmpty(auth.ConsumerKey)) return;

        Http.BaseAddress = new Uri("https://api.cloud4mobile.com.br/");

        string url = "devices?$top=25";

        try
        {
            var token = BearerTokenGenerator.GetBearerToken(auth, "GET", Http.BaseAddress + url);

            Console.WriteLine(token);

            Http.DefaultRequestHeaders.Accept.Clear();
            Http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

            Http.DefaultRequestHeaders.Remove("Authorization");
            Http.DefaultRequestHeaders.Add("Authorization", $"Bearer {token}");

            devices = await Http.GetJsonAsync<List<Device>>(url);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
            Console.WriteLine(ex.StackTrace);
        }
    }

}
